name: Build & Push Docker Images (Flux will update manifests via Image Automation)

on:
  workflow_dispatch:
  push:
    branches: [ "staging" ]
    paths:
      - "backend/**"
      - "auth/**"
      - "services/store-deployer/**"
      - "services/template-registry/**"
      - "migrations.Dockerfile"
      - ".github/workflows/*.yml"
      - ".github/workflows/*.yaml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  REGISTRY: ghcr.io
  REPO_PATH: ${{ github.repository }}                 # owner/repo
  # IMAGE_TAG is computed per-build in each job as: <branch>-<short-sha>-<timestamp>

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      auth: ${{ steps.filter.outputs.auth }}
      store: ${{ steps.filter.outputs.store }}
      registry: ${{ steps.filter.outputs.registry }}
      migrations: ${{ steps.filter.outputs.migrations }}
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
            auth:
              - 'auth/**'
            store:
              - 'services/store-deployer/**'
            registry:
              - 'services/template-registry/**'
            migrations:
              - 'backend/migrations.Dockerfile'

  build-backend:
    needs: changes
    if: needs.changes.outputs.backend == 'true' && contains(github.event.head_commit.message, '[skip-ci]') == false
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - id: tag
        run: |
          # Compute tag: <branch>-<short-sha>-<timestamp>
          GIT_BRANCH=${GITHUB_REF#refs/heads/}
          GIT_SHA_SHORT=${GITHUB_SHA:0:7}
          IMAGE_TAG="${GIT_BRANCH}-${GIT_SHA_SHORT}-$(date +%s)"
          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:latest

      - name: Build & Push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_PATH }}/backend:latest
            ${{ env.REGISTRY }}/${{ env.REPO_PATH }}/backend:${{ steps.tag.outputs.image_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-auth-handler:
    needs: changes
    if: needs.changes.outputs.auth == 'true'
    runs-on: ubuntu-latest
    permissions: { contents: read, packages: write }
    steps:
      - uses: actions/checkout@v4
      - id: tag
        run: |
          GIT_BRANCH=${GITHUB_REF#refs/heads/}
          GIT_SHA_SHORT=${GITHUB_SHA:0:7}
          IMAGE_TAG="${GIT_BRANCH}-${GIT_SHA_SHORT}-$(date +%s)"
          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:latest
      - name: Build & Push auth-handler
        uses: docker/build-push-action@v5
        with:
          context: ./auth/authentication-handler
          file: ./auth/authentication-handler/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_PATH }}/auth-handler:latest
            ${{ env.REGISTRY }}/${{ env.REPO_PATH }}/auth-handler:${{ steps.tag.outputs.image_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-store-deployer:
    needs: changes
    if: needs.changes.outputs.store == 'true'
    runs-on: ubuntu-latest
    permissions: { contents: read, packages: write }
    steps:
      - uses: actions/checkout@v4
      - id: tag
        run: |
          GIT_BRANCH=${GITHUB_REF#refs/heads/}
          GIT_SHA_SHORT=${GITHUB_SHA:0:7}
          IMAGE_TAG="${GIT_BRANCH}-${GIT_SHA_SHORT}-$(date +%s)"
          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:latest
      - name: Build & Push store-deployer
        uses: docker/build-push-action@v5
        with:
          context: ./services/store-deployer
          file: ./services/store-deployer/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_PATH }}/store-deployer:latest
            ${{ env.REGISTRY }}/${{ env.REPO_PATH }}/store-deployer:${{ steps.tag.outputs.image_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-template-registry:
    needs: changes
    if: needs.changes.outputs.registry == 'true'
    runs-on: ubuntu-latest
    permissions: { contents: read, packages: write }
    steps:
      - uses: actions/checkout@v4
      - id: tag
        run: |
          GIT_BRANCH=${GITHUB_REF#refs/heads/}
          GIT_SHA_SHORT=${GITHUB_SHA:0:7}
          IMAGE_TAG="${GIT_BRANCH}-${GIT_SHA_SHORT}-$(date +%s)"
          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:latest
      - name: Build & Push template-registry
        uses: docker/build-push-action@v5
        with:
          context: ./services/template-registry
          file: ./services/template-registry/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_PATH }}/template-registry:latest
            ${{ env.REGISTRY }}/${{ env.REPO_PATH }}/template-registry:${{ steps.tag.outputs.image_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-migrations:
    needs: changes
    if: needs.changes.outputs.migrations == 'true'
    runs-on: ubuntu-latest
    permissions: { contents: read, packages: write }
    steps:
      - uses: actions/checkout@v4
      - id: tag
        run: |
          GIT_BRANCH=${GITHUB_REF#refs/heads/}
          GIT_SHA_SHORT=${GITHUB_SHA:0:7}
          IMAGE_TAG="${GIT_BRANCH}-${GIT_SHA_SHORT}-$(date +%s)"
          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:latest
      - name: Build & Push migrations
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/migrations.Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_PATH }}/backend-migrations:latest
            ${{ env.REGISTRY }}/${{ env.REPO_PATH }}/backend-migrations:${{ steps.tag.outputs.image_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


