apiVersion: v1
kind: Secret
metadata:
  name: cloud-build-secret
  namespace: naytife-build
  labels:
    app.kubernetes.io/name: cloud-build
    app.kubernetes.io/part-of: naytife-platform
type: Opaque
data:
  # naytife-redis-2024
  REDIS_PASSWORD: bmF5dGlmZS1yZWRpcy0yMDI0
  CLOUDFLARE_R2_ACCESS_KEY_ID: ZDhmOTdlMjcxOTg0NWY3MDRhMDk3NzdjMDZjYWVjZmU=
  CLOUDFLARE_R2_SECRET_ACCESS_KEY: NTA1ODRhNjc4YmQ5Zjg1MWRmMTIzMTE1MDBlYTg5ZDcwMmJmN2ZiOWY5YWY3YWUyZTE1NWYwYTg1MjA2NzA1Yg==
  R2_BUCKET_REGION: YXV0bw==
  CLOUDFLARE_R2_ENDPOINT: aHR0cHM6Ly83ZmY3M2EzODUwYTIzN2U4NzFhMWE3MjAzOTVkNGZiNy5yMi5jbG91ZGZsYXJlc3RvcmFnZS5jb20g
  CLOUDFLARE_R2_BUCKET_NAME: bmF5dGlmZS1idWlsZHM=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloud-build-config
  namespace: naytife-build
  labels:
    app.kubernetes.io/name: cloud-build
    app.kubernetes.io/part-of: naytife-platform
data:
  PORT: "9000"
  REDIS_ADDR: "redis.naytife.svc.cluster.local:6379"
  REDIS_QUEUE: "build-queue"
  BUILD_DIR: "/app/built_sites"
  AWS_REGION: "us-east-1"
  LOG_LEVEL: "info"
  BACKEND_URL: "http://backend.naytife.svc.cluster.local:8000"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-build
  namespace: naytife-build
  labels:
    app.kubernetes.io/name: cloud-build
    app.kubernetes.io/part-of: naytife-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloud-build
  template:
    metadata:
      labels:
        app: cloud-build
        app.kubernetes.io/name: cloud-build
        app.kubernetes.io/part-of: naytife-platform
    spec:
      initContainers:
      - name: wait-for-redis
        image: redis:7-alpine
        command:
        - sh
        - -c
        - |
          until redis-cli -h redis.naytife.svc.cluster.local -p 6379 -a naytife-redis-2024 ping; do
            echo "Waiting for redis..."
            sleep 2
          done
      containers:
      - name: cloud-build
        image: naytife/cloud-build:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 9000
          name: http
        envFrom:
        - configMapRef:
            name: cloud-build-config
        - secretRef:
            name: cloud-build-secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "800m"
        livenessProbe:
          httpGet:
            path: /health
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 9000
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: built-sites
          mountPath: /app/built_sites
        - name: templates
          mountPath: /app/templates
      volumes:
      - name: built-sites
        emptyDir: {}
      - name: templates
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: cloud-build
  namespace: naytife-build
  labels:
    app.kubernetes.io/name: cloud-build
    app.kubernetes.io/part-of: naytife-platform
spec:
  type: ClusterIP
  ports:
  - port: 9000
    targetPort: 9000
    name: http
  selector:
    app: cloud-build
---
# NodePort service for external access during development
apiVersion: v1
kind: Service
metadata:
  name: cloud-build-nodeport
  namespace: naytife-build
  labels:
    app.kubernetes.io/name: cloud-build
spec:
  type: ClusterIP
  ports:
  - port: 9000
    targetPort: 9000
    name: http
  selector:
    app: cloud-build
