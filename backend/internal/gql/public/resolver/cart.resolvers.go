package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.66

import (
	"context"
	"fmt"

	"github.com/petrejonn/naytife/internal/gql/public/generated"
	"github.com/petrejonn/naytife/internal/gql/public/model"
)

// AddCartItem is the resolver for the addCartItem field.
func (r *mutationResolver) AddCartItem(ctx context.Context, input model.AddCartItemInput) (*model.Cart, error) {
	panic(fmt.Errorf("not implemented: AddCartItem - addCartItem"))
}

// RemoveCartItem is the resolver for the removeCartItem field.
func (r *mutationResolver) RemoveCartItem(ctx context.Context, input model.RemoveCartItemInput) (*model.Cart, error) {
	panic(fmt.Errorf("not implemented: RemoveCartItem - removeCartItem"))
}

// UpdateCartItem is the resolver for the updateCartItem field.
func (r *mutationResolver) UpdateCartItem(ctx context.Context, input model.UpdateCartItemInput) (*model.Cart, error) {
	panic(fmt.Errorf("not implemented: UpdateCartItem - updateCartItem"))
}

// Cart is the resolver for the cart field.
func (r *queryResolver) Cart(ctx context.Context) (*model.Cart, error) {
	panic(fmt.Errorf("not implemented: Cart - cart"))
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
