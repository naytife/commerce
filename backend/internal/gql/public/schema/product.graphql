# ======== PRODUCT ========
extend type Query {
  products(first: Int = 20, after: ID): ProductConnection!
  product(id: ID!): Product
}
type ProductConnection {
  edges: [ProductEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}
type ProductEdge {
  cursor: ID!
  node: Product!
}

type ProductNotFoundError implements UserError {
  message: String!
  code: ErrorCode!
  path: [String!]!
}
type Product implements Node {
  id: ID!
  title: String!
  description: String!
  attributes: [ProductAttribute!]!
  defaultVariant: ProductVariant!
  variants: [ProductVariant!]!
  images: [Image!]!
  updatedAt: DateTime!
  createdAt: DateTime!
}

# ======== ProductVariant ========
enum ProductStockStatus {
  IN_STOCK
  OUT_OF_STOCK
  PREORDER
}
type ProductVariant implements Node {
  id: ID!
  slug: String!
  price: Float!
  availableQuantity: Int!
  description: String!
  attributes: [ProductAttribute!]!
  stockStatus: ProductStockStatus!
}
type ProductAttribute {
  attribute_title: String!
  value: String!
}

