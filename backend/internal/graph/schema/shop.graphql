# ======== SHOP ========
extend type Query {
  shop: Shop!
  myShops: [Shop!]!
}
extend type Mutation {
  createShop(shop: CreateShopInput!): CreateShopPayload
  updateShop(shop: UpdateShopInput!): UpdateShopPayload
  createWhatsApp(input: CreateWhatsAppInput!): CreateWhatsAppPayload
  updateWhatsApp(input: UpdateWhatsAppInput!): UpdateWhatsAppPayload!
}
enum ShopStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
  SUSPENDED
}
type ShopNotFoundError implements UserError {
  message: String!
  code: ErrorCode!
  path: [String!]!
}
type ShopAddress {
  address: String!
}
input ShopAddressInput {
  address: String!
}
type PhoneNumber {
  e164: String!
}
interface SocialMediaContact {
  url: String
}
type WhatsApp implements SocialMediaContact {
  url: String!
  phoneNumber: PhoneNumber!
}
type Facebook implements SocialMediaContact {
  url: String!
  handle: String!
}
type Instagram implements SocialMediaContact {
  url: String!
  handle: String!
}
input CreateShopInput {
  title: String!
  domain: String!
}
union CreateShopPayload = CreateShopSuccess
type CreateShopSuccess {
  shop: Shop
}
input UpdateShopInput {
  title: String
  contactEmail: String
  contactPhone: PhoneNumberInput
  address: ShopAddressInput
  currencyCode: String
  about: String
  seoDescription: String
  seoKeywords: [String!]
  seoTitle: String
}
union UpdateShopPayload = UpdateShopSuccess | ShopNotFoundError
type UpdateShopSuccess {
  shop: Shop
}
union CreateWhatsAppPayload = CreateWhatsAppSuccess | ShopNotFoundError
type CreateWhatsAppSuccess {
  whatsApp: WhatsApp
}
input CreateWhatsAppInput {
  url: String!
  phoneNumber: PhoneNumberInput!
}
union UpdateWhatsAppPayload = UpdateWhatsAppSuccess | ShopNotFoundError
type UpdateWhatsAppSuccess {
  whatsApp: WhatsApp!
}
input UpdateWhatsAppInput {
  url: String
  phoneNumber: PhoneNumberInput
}
input PhoneNumberInput {
  e164: String!
}
type Shop implements Node {
  id: ID!
  title: String!
  defaultDomain: String!
  contactPhone: PhoneNumber
  contactEmail: String
  address: ShopAddress
  products(first: Int = 20, after: ID): ProductConnection
  whatsApp: WhatsApp
  facebook: Facebook
  images: ShopImages
  currencyCode: String!
  status: ShopStatus!
  about: String
  shopProductsCategory: String # Pets|Groceries|Fruits|Vegetables
  # template: StoreFrontTemplate!
  seoDescription: String
  seoKeywords: [String!]!
  seoTitle: String
  updatedAt: DateTime!
  createdAt: DateTime!
  owner: User!
}
type ShopImages {
  siteLogo: Image
  favicon: Image
  banner: Image
  coverImage: Image
}
