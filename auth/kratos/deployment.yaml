apiVersion: apps/v1
kind: Deployment
metadata:
  name: kratos-deployment
  namespace: ory
  labels:
    app.kubernetes.io/name: kratos
    app.kubernetes.io/instance: kratos-instance
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kratos
      app.kubernetes.io/instance: kratos-instance
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kratos
        app.kubernetes.io/instance: kratos-instance
    spec:
      serviceAccountName: kratos-sa
      containers:
      - name: kratos
        image: oryd/kratos:v1.2.0-distroless
        args:
          [
            "serve",
            "all",
            "--dev",
            "--config",
            "/etc/config/kratos.yaml",
            "--watch-courier",
          ]
        ports:
          - containerPort: 4433 # Public API
          - containerPort: 4434 # Admin API
        env:
          - name: DSN
            valueFrom:
              secretKeyRef:
                name: kratos-secret
                key: DSN
          - name: KRATOS_COOKIE_SECRET
            valueFrom:
              secretKeyRef:
                name: kratos-secret
                key: KRATOS_COOKIE_SECRET
          - name: KRATOS_CIPHER_KEY
            valueFrom:
              secretKeyRef:
                name: kratos-secret
                key: KRATOS_CIPHER_KEY
        volumeMounts:
          - name: config-volume
            mountPath: /etc/config
            readOnly: true
          - name: config-identity
            mountPath: /etc/config/identity
            readOnly: true
        livenessProbe:
          httpGet:
            path: /health/alive
            port: 4433
          initialDelaySeconds: 10
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 4433
          initialDelaySeconds: 10
          periodSeconds: 15
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 100
        resources:
          limits:
            memory: "256Mi"
            cpu: "500m"
          requests:
            memory: "128Mi"
            cpu: "250m"
      
      initContainers:
        - name: kratos-migrate
          image: oryd/kratos:v1.2.0-distroless
          imagePullPolicy: IfNotPresent
          command: ["kratos", "migrate", "sql", "--yes", "-e", "--config", "/etc/config/kratos.yaml"]
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
          env:
            - name: DSN
              valueFrom:
                secretKeyRef:
                  name: kratos-secret
                  key: DSN
      volumes:
        - name: config-volume
          configMap:
            name: kratos-config
        - name: config-identity
          configMap:
            name: kratos-identity
