events {
    worker_connections 1024;
}

http {

    resolver 127.0.0.11 valid=10s;

    server {
        listen 80;

        location / {
            auth_request /auth-decision;

	    # Auth Request sets these variables
            auth_request_set $next_uri $upstream_http_X_Original_URI;
	    auth_request_set $x_user $upstream_http_X_User;

            proxy_pass http://hello:8090$request_uri;
            proxy_set_header Host $host;
	    # Proxying them to upstream
	    proxy_set_header X-User $x_user;
        }

        location /auth-decision {
            internal;
            proxy_pass http://oathkeeper:4456/decisions$request_uri;
            proxy_pass_request_body   off;
            proxy_set_header          Content-Length   "";
            proxy_set_header          Host             $http_host;
            proxy_set_header          X-Original-URI   $request_uri;
	    # required to pass X-User header to the upstream
	    proxy_pass_request_headers      on;
        }

        error_page 401 = @error401;

        # Catch if 401/unauthorized and redirect for login
        location @error401 {
            return 302 http://127.0.0.1:4455/login?next=http://$http_host$next_uri;
        }
    }
}